<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.green.hoteldog.review.ReviewMapper">

    <!--상세페이지 리뷰 페이지네이션-->
    <select id="selHotelReview">
        SELECT C.nick_name AS nickName, C.pic AS userPic
        , D.review_pk AS reviewPk, D.comment, D.score, D.created_at AS createdAt
        , COUNT(E.user_pk) AS favCount
        FROM t_hotel A
        JOIN t_reservation B
        ON A.hotel_pk = B.hotel_pk
        JOIN t_user C
        ON B.user_pk = C.user_pk
        JOIN t_review D
        ON B.res_pk = D.res_pk
        JOIN t_review_fav E
        ON D.review_pk = E.review_pk
        WHERE A.hotel_pk = #{hotelPk}
        GROUP BY reviewPk
        ORDER BY favCount DESC
        LIMIT #{stardIdx}, #{rowCount}
    </select>

    <!--호텔 pk -> 예약 pk에 관련 된 사진들만 셀렉트-->
    <select id="selHotelReviewPics">
        SELECT A.review_pk AS reviewPk, A.pic
        FROM t_review_pic A
        JOIN t_review B
        ON A.review_pk = B.review_pk
        JOIN t_reservation C
        ON B.res_pk = C.res_pk
        JOIN t_review_fav D
        ON B.review_pk = D.review_pk
        WHERE C.hotel_pk = #{hotelPk}
        AND B.review_pk IN
        (
        <foreach collection="list" item="reviewPk" separator=",">
            #{reviewPk}
        </foreach>
        )
        GROUP BY B.review_pk
        ORDER BY COUNT(D.user_pk) DESC
    </select>
    <!-- 영웅 -->


    <insert id="insReview" keyProperty="reviewPk" useGeneratedKeys="true">
        INSERT INTO t_review
        SET res_pk = #{resPk}
        ,comment = #{comment}
        ,score = #{score}
    </insert>
    <insert id="insReviewPics">
        INSERT INTO t_review_pic
        (review_pk , pic)
        VALUES
        <foreach collection="pics" item="pic" open="(" separator="),(" close=")">
            #{reviewPk},#{pic}
        </foreach>
    </insert>
    <update id="updReview">
        UPDATE t_review
        SET comment = #{comment}
        ,score = #{score}
        WHERE review_pk = #{reviewPk}
    </update>
    <update id="updReviewComment">
        UPDATE t_review
        SET comment = #{comment}
        WHERE review_pk = #{reviewPk}
    </update>
    <delete id="delReviewPics">
        DELETE FROM t_review_pic
        WHERE review_pk = #{reviewPk}
    </delete>
    <insert id="insReviewFav">
        INSERT INTO t_review_fav
        SET user_pk = #{userPk}
        ,review_pk = #{reviewPk}
    </insert>
    <delete id="delReviewFav">
        DELETE t_review_fav
        WHERE user_pk = #{userPk} AND review_pk = #{reviewPk}
    </delete>
    <select id="selReviewList">
        SELECT A.review_pk AS reviewPk
        , B.user_pk AS userPk
        , B.nickname
        , A.comment
        , A.score
        , A.created_at AS createdAt
        , COUNT(C.review_pk) AS favCount
        FROM t_hotel_review A
        LEFT JOIN t_user B
        ON A.user_pk = B.user_pk
        LEFT JOIN t_review_fav C
        ON A.review_pk = C.review_pk
        GROUP BY A.review_pk
        WHERE A.hotel_pk = #{hotelPk}
        LIMIT #{startIdx},#{rowCount}
    </select>
    <select id="selReviewPics">
        SELECT review_pk AS reviewPk, pic
        FROM t_review_pics
        WHERE review_pk IN
        <foreach collection="reviewPkList" item="reviewPk" open="(" close=")" separator=",">
            #{reviewPk}
        </foreach>
    </select>
    <!--재웅-->

</mapper>